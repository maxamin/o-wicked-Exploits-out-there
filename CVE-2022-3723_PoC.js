// --expose-gc --allow-natives-syntax

function setInnerProperty(o) {
  o.inner.foo = {};
}

function makeObject() {
    // [‘foo’] syntax causes kStoreInLiteral operation
    var o = {
        inner: {
            ['foo']: 0
        }
    };
    // Spreading arguments prevents inlining
    setInnerProperty(o, ...arguments);
    %OptimizeFunctionOnNextCall(setInnerProperty);
    setInnerProperty(o, ...arguments);
    return o;
}

%PrepareFunctionForOptimization(makeObject);
%PrepareFunctionForOptimization(setInnerProperty);

makeObject();
gc();
makeObject();
gc();

%OptimizeFunctionOnNextCall(makeObject);
let o = makeObject();
%HeapObjectVerify(o.inner);

